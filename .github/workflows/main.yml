on: 
  push: 
    branches: 
      - main

jobs:
  build-and-deploy: 
    runs-on: ubuntu-latest

    permissions:
      id-token: write   # Permite que se escriba el id-token para autenticación

    steps: 
      #1. Configurar el repositorio
      - name: Checkout code
        uses: actions/checkout@v3

#2. Construir la imagen, ahora con el contexto del directorio actual
      - name: Build Docker image
        run: |
          docker build -t findspecs:latest .

      # 3. Iniciar sesión en el Azure Container Registry
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_ACR_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_ACR_USERNAME }}
          password: ${{ secrets.AZURE_ACR_PASSWORD }}

# 4. Subir la imagen al ACR
      - name: Push Docker image to Azure Container Registry
        run: |
          docker tag findspecs:latest ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/specsmobile:latest
          docker push ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/specsmobile:latest


# 5. Login a Azure usando identidad federada
      - name: Login to Azure using Federated Identity
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}  # ID de cliente de tu Service Principal
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}  # ID de tu tenant
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # ID de la suscripción de Azure
          
 # 6. Desplegar en Azure App Service
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: mobileSpecAuth
          slot-name: production
          images: ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/specsmobile:latest
